---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';

let colors = [
	"red","blue","green","purple","yellow"
]

let l = colors.length;

const generateRandomNumber = () => Math.floor(Math.random() * (l- 0 + 1)) + 0

const generateRandomColor = () => colors[generateRandomNumber()]

const infoCards = [
	{
		color:generateRandomColor(),
		href:"https://docs.astro.build/",
		title:"Github",
		body:"My hobby work. Including this website"
	},
	{
		color:generateRandomColor(),
		href:"https://www.linkedin.com/in/cameron-carley-711b07169/?originalSubdomain=ca",
		title:"Linkedin",
		body:"Work stuff! Let's connect!"
	}
]


---
<Layout title="Cameron Carley's Personal Website">
	<main>
		<span class="center">
			<h1>My name is <span class="text-gradient">Cameron Carley.</span></h1>
			<h2>Welcome to my humble abodeðŸ‘‹</h2>
		</span>
		<img src="profile.jpg" class="center round-img" alt="Avatar">
		<ul role="list" class="link-card-grid">
		 {
			infoCards.length ?
				infoCards.map(card=>{
					return (<Card
						color={card.color}
						href={card.href}
						title={card.title}
						body={card.body}
					/>);
			}) : <div>"Hi"</div>
		}
		</ul>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 70ch;
	}

	.main-card-list{
		max-width: 50ch;
	}
	h1 {
		font-size: 2rem;
		font-weight: 800;
		margin: 0;
	}

	h2{
		font-size: 1.5rem;
		font-weight:700;
		margin-bottom:2rem;
	}

	.center{
		display: block;
		margin-left: auto;
		margin-right: auto;
		width: 35%;
	}
	.round-img{
		border-radius: 50%;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
